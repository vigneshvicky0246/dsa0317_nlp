DESCRIPTION:
Word Sense Disambiguation (WSD) is the task of identifying the correct meaning of a word in a given context. 
The Lesk algorithm is a classic algorithm for WSD that relies on the overlap between the dictionary definitions of the words in the context and 
the definitions of the target word's senses.

The provided code uses the Lesk algorithm from the Natural Language Toolkit (nltk) library to perform WSD. 
It tokenizes the input sentence, applies the Lesk algorithm to find the appropriate sense of the target word, and then returns the sense's name and definition.

CODE:
from nltk.corpus import wordnet
from nltk.tokenize import word_tokenize
from nltk.wsd import lesk
def perform_word_sense_disambiguation(sentence, target_word):
    words = word_tokenize(sentence)
    sense = lesk(words, target_word)

    if sense:
        return sense.name(), sense.definition()
    else:
        return None
# Example sentence and target word
example_sentence = "He went to the bank to deposit some money."
target_word = "bank"
# Perform word sense disambiguation
result = perform_word_sense_disambiguation(example_sentence, target_word)
# Print the result
if result:
    sense_name, sense_definition = result
    print(f"Sense Name: {sense_name}")
    print(f"Sense Definition: {sense_definition}")
else:
    print(f"No sense found for the word '{target_word}' in the given context.")

OUTPUT:
Sense Name: bank.n.09
Sense Definition: a financial institution that accepts deposits and channels the money into lending activities
